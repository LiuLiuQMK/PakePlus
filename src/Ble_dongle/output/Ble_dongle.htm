<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Ble_dongle.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Ble_dongle.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140002: Last Updated: Fri Jul  5 18:31:58 2024
<BR><P>
<H3>Maximum Stack Usage =        416 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
bsp_usb_event_handler &rArr; bsp_usp_hid_ucm_rx_data_trigger &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b]">IRQHandler_TIMER2_INT</a> from main.o(.text.IRQHandler_TIMER2_INT) referenced 2 times from main.o(.text.setup_peripherals)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ing91600.o(.text) referenced from startup_ing91600.o(RESET)
 <LI><a href="#[4]">USB_IrqHandler</a> from peripheral_usb.o(.text.USB_IrqHandler) referenced 2 times from bsp_usb_hid_iap.o(.text.bsp_usb_init)
 <LI><a href="#[2]">__scatterload</a> from init.o(.text) referenced from startup_ing91600.o(.text)
 <LI><a href="#[3]">app_main</a> from main.o(.text.app_main) referenced from startup_ing91600.o(.text)
 <LI><a href="#[9]">basic_output_notification_handler</a> from profile.o(.text.basic_output_notification_handler) referenced 2 times from profile.o(.text.service_discovery_callback)
 <LI><a href="#[5]">bsp_usb_event_handler</a> from bsp_usb_hid_iap.o(.text.bsp_usb_event_handler) referenced 2 times from bsp_usb_hid_iap.o(.text.bsp_usb_init)
 <LI><a href="#[e]">btstack_callback</a> from profile.o(.text.btstack_callback) referenced 2 times from profile.o(.text.user_msg_handler)
 <LI><a href="#[13]">cb_assertion</a> from main.o(.text.cb_assertion) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[12]">cb_hard_fault</a> from main.o(.text.cb_hard_fault) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[15]">cb_heap_out_of_mem</a> from main.o(.text.cb_heap_out_of_mem) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[10]">cb_putc</a> from main.o(.text.cb_putc) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[16]">cb_trace_rtt</a> from trace.o(.text.cb_trace_rtt) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[6]">characteristic_discovery_callback</a> from gatt_client_util.o(.text.characteristic_discovery_callback) referenced 2 times from gatt_client_util.o(.text.discover_char_of_service)
 <LI><a href="#[6]">characteristic_discovery_callback</a> from gatt_client_util.o(.text.characteristic_discovery_callback) referenced 2 times from gatt_client_util.o(.text.service_discovery_callback)
 <LI><a href="#[7]">descriptor_discovery_callback</a> from gatt_client_util.o(.text.descriptor_discovery_callback) referenced 2 times from gatt_client_util.o(.text.discover_desc_of_char)
 <LI><a href="#[a]">extend_output_notification_handler</a> from profile.o(.text.extend_output_notification_handler) referenced 2 times from profile.o(.text.service_discovery_callback)
 <LI><a href="#[d]">gatt_client_util_dump_profile</a> from gatt_client_util.o(.text.gatt_client_util_dump_profile) referenced 2 times from profile.o(.text.sm_packet_handler)
 <LI><a href="#[1]">main</a> from startup_ing91600.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[14]">on_lle_init</a> from main.o(.text.on_lle_init) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[8]">service_discovery_callback</a> from gatt_client_util.o(.text.service_discovery_callback) referenced 2 times from gatt_client_util.o(.text.gatt_client_util_discover_all)
 <LI><a href="#[f]">service_discovery_callback</a> from profile.o(.text.service_discovery_callback) referenced 2 times from profile.o(.text.user_packet_handler)
 <LI><a href="#[11]">setup_profile</a> from profile.o(.text.setup_profile) referenced from main.o(.rodata.evt_cb_table)
 <LI><a href="#[17]">sm_packet_handler</a> from profile.o(.text.sm_packet_handler) referenced from profile.o(.data.sm_event_callback_registration)
 <LI><a href="#[c]">user_packet_handler</a> from profile.o(.text.user_packet_handler) referenced 2 times from profile.o(.text.setup_profile)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b0]"></a>att_server_register_packet_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[b9]"></a>btstack_push_user_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[aa]"></a>gap_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[c2]"></a>gap_ext_create_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[c4]"></a>gap_read_remote_used_features</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[bf]"></a>gap_set_ext_scan_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[be]"></a>gap_set_ext_scan_para</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[bd]"></a>gap_set_random_device_address</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[95]"></a>gatt_client_discover_characteristic_descriptors</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
</UL>

<P><STRONG><a name="[94]"></a>gatt_client_discover_characteristics_for_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
</UL>

<P><STRONG><a name="[9f]"></a>gatt_client_discover_primary_services</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[c5]"></a>gatt_client_discover_primary_services_by_uuid16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[a8]"></a>gatt_client_listen_for_characteristic_value_updates</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[b1]"></a>gatt_client_register_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[bb]"></a>gatt_client_write_characteristic_descriptor_using_descriptor_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[af]"></a>hci_add_event_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[73]"></a>platform_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[65]"></a>platform_enable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>

<P><STRONG><a name="[89]"></a>platform_get_gen_os_driver</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_trace_rtt
</UL>

<P><STRONG><a name="[28]"></a>platform_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_callback
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extend_output_notification_handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_output_notification_handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_heap_out_of_mem
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_hard_fault
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[9e]"></a>platform_raise_assertion</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[63]"></a>platform_read_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>

<P><STRONG><a name="[c3]"></a>platform_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[70]"></a>platform_set_evt_callback_table</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[82]"></a>platform_set_irq_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[7b]"></a>printf_hexdump</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[c1]"></a>reverse_bd_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[b2]"></a>sm_add_event_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[b3]"></a>sm_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[b7]"></a>sm_just_works_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[a9]"></a>sm_request_pairing</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[b4]"></a>sm_set_authentication_requirements</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[a2]"></a>uuid_has_bluetooth_prefix</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_uuid
</UL>

<P><STRONG><a name="[18]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[c8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[19]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ca]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[cb]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[cc]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[cd]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91600.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91600.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetPLLClk
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_tx_data_trigger
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security0
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_output_notification_handler
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ucm_rx_data_trigger
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_rx_data_trigger
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6d]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_finded
</UL>

<P><STRONG><a name="[6a]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[1d]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[d4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[d5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>GIO_SetDirection</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, peripheral_gpio.o(.text.GIO_SetDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GIO_SetDirection &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_MaskedWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[24]"></a>GIO_WriteValue</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, peripheral_gpio.o(.text.GIO_WriteValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GIO_WriteValue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[29]"></a>PINCTRL_EnableAnalog</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, peripheral_pinctrl.o(.text.PINCTRL_EnableAnalog))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_Pull
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>

<P><STRONG><a name="[2b]"></a>PINCTRL_Pull</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, peripheral_pinctrl.o(.text.PINCTRL_Pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PINCTRL_Pull
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
</UL>

<P><STRONG><a name="[2c]"></a>PINCTRL_SelUSB</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[2a]"></a>PINCTRL_SetPadMux</STRONG> (Thumb, 438 bytes, Stack size 32 bytes, peripheral_pinctrl.o(.text.PINCTRL_SetPadMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PINCTRL_SetPadMux &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;source_id_on_pin
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
</UL>

<P><STRONG><a name="[2f]"></a>SEGGER_RTT_GetAvailWriteSpace</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, trace.o(.text.SEGGER_RTT_GetAvailWriteSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SEGGER_RTT_GetAvailWriteSpace &rArr; _GetAvailWriteSpace
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_trace_rtt
</UL>

<P><STRONG><a name="[31]"></a>SEGGER_RTT_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, trace.o(.text.SEGGER_RTT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_rtt_init
</UL>

<P><STRONG><a name="[33]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, trace.o(.text.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_trace_rtt
</UL>

<P><STRONG><a name="[34]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, trace.o(.text.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[3a]"></a>SYSCTRL_ClearClkGate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SYSCTRL_ClearClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClkGateCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
</UL>

<P><STRONG><a name="[3c]"></a>SYSCTRL_ClearClkGateMulti</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGateMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYSCTRL_ClearClkGateMulti &rArr; SYSCTRL_ClearClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGate
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_disable
</UL>

<P><STRONG><a name="[3d]"></a>SYSCTRL_GetPLLClk</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_GetPLLClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SYSCTRL_GetPLLClk &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetSlowClk
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[3e]"></a>SYSCTRL_GetSlowClk</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, peripheral_sysctrl.o(.text.SYSCTRL_GetSlowClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCTRL_GetSlowClk
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetPLLClk
</UL>

<P><STRONG><a name="[3f]"></a>SYSCTRL_ICacheControl</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ICacheControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_CacheControl0
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security
</UL>

<P><STRONG><a name="[40]"></a>SYSCTRL_Init</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SYSCTRL_Init &rArr; flash_get_factory_calib_data &rArr; flash_prepare_factory_data &rArr; copy_security_data &rArr; read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetLDOOutput
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_factory_calib_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[43]"></a>SYSCTRL_SelectUSBClk</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, peripheral_sysctrl.o(.text.SYSCTRL_SelectUSBClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SYSCTRL_SelectUSBClk &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[44]"></a>SYSCTRL_SetClkGate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_SetClkGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SYSCTRL_SetClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClkGateCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetClkGateMulti
</UL>

<P><STRONG><a name="[45]"></a>SYSCTRL_SetClkGateMulti</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_SetClkGateMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYSCTRL_SetClkGateMulti &rArr; SYSCTRL_SetClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetClkGate
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_disable
</UL>

<P><STRONG><a name="[42]"></a>SYSCTRL_SetLDOOutput</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_SetLDOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SYSCTRL_SetLDOOutput &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_Init
</UL>

<P><STRONG><a name="[77]"></a>SYSCTRL_USBPhyConfig</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, peripheral_sysctrl.o(.text.SYSCTRL_USBPhyConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SYSCTRL_USBPhyConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_disable
</UL>

<P><STRONG><a name="[25]"></a>TMR_Enable</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, peripheral_timer.o(.text.TMR_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[23]"></a>TMR_IntClr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, peripheral_timer.o(.text.TMR_IntClr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_IntClr
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[ae]"></a>TMR_IntEnable</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, peripheral_timer.o(.text.TMR_IntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[ad]"></a>TMR_SetOpMode</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, peripheral_timer.o(.text.TMR_SetOpMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TMR_SetOpMode
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[27]"></a>TMR_SetReload</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, peripheral_timer.o(.text.TMR_SetReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TMR_SetReload
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[88]"></a>UART_SendData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, peripheral_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[53]"></a>USB_CancelTransfert</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_CancelTransfert))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_CancelTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
</UL>

<P><STRONG><a name="[60]"></a>USB_CheckTransferCondition</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_CheckTransferCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_CheckTransferCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[46]"></a>USB_Close</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_Close &rArr; USB_ClrConfig &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetTransfert
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_disable
</UL>

<P><STRONG><a name="[47]"></a>USB_ClrConfig</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_ClrConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_ClrConfig &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Close
</UL>

<P><STRONG><a name="[4b]"></a>USB_ConfigureEp</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_ConfigureEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_ConfigureEp &rArr; USB_EnableEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEp
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[4d]"></a>USB_ContinueTransfer</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, peripheral_usb.o(.text.USB_ContinueTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_ContinueTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_NewTransfer
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
</UL>

<P><STRONG><a name="[50]"></a>USB_CoreReset</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[68]"></a>USB_DeviceInitialization</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_DeviceInitialization))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[69]"></a>USB_DeviceSetThreshold</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_DeviceSetThreshold))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[4a]"></a>USB_DisableEp</STRONG> (Thumb, 472 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_DisableEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_DisableEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CancelTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
</UL>

<P><STRONG><a name="[54]"></a>USB_EP0StatusIn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_EP0StatusIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_EP0StatusIn &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
</UL>

<P><STRONG><a name="[57]"></a>USB_EP0StatusOut</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_EP0StatusOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
</UL>

<P><STRONG><a name="[4c]"></a>USB_EnableEp</STRONG> (Thumb, 448 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_EnableEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_EnableEp
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigureEp
</UL>

<P><STRONG><a name="[62]"></a>USB_FlushRXFifo</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_FlushRXFifo))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
</UL>

<P><STRONG><a name="[52]"></a>USB_FlushTXFifo</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_FlushTXFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_FlushTXFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
</UL>

<P><STRONG><a name="[78]"></a>USB_GetEp0SetupData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetEp0SetupData))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[5a]"></a>USB_GetMaxPacketSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetMaxPacketSize))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>

<P><STRONG><a name="[59]"></a>USB_GetMaxTransferSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetMaxTransferSize))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>

<P><STRONG><a name="[56]"></a>USB_GetSetupPacket</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetSetupPacket))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
</UL>

<P><STRONG><a name="[4e]"></a>USB_GetTransferSize</STRONG> (Thumb, 446 bytes, Stack size 80 bytes, peripheral_usb.o(.text.USB_GetTransferSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetMaxTransferSize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetMaxPacketSize
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
</UL>

<P><STRONG><a name="[5b]"></a>USB_HandleEp0</STRONG> (Thumb, 460 bytes, Stack size 64 bytes, peripheral_usb.o(.text.USB_HandleEp0))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = USB_HandleEp0 &rArr; USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusOut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[5d]"></a>USB_InitConfig</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_InitConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_InitConfig &rArr; USB_ResetAndConfig &rArr; USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[4]"></a>USB_IrqHandler</STRONG> (Thumb, 1198 bytes, Stack size 80 bytes, peripheral_usb.o(.text.USB_IrqHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = USB_IrqHandler &rArr; USB_HandleEp0 &rArr; USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_PCStopPhyClcok
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CheckTransferCondition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_usb_hid_iap.o(.text.bsp_usb_init)
</UL>
<P><STRONG><a name="[79]"></a>USB_IsEpStall</STRONG> (Thumb, 162 bytes, Stack size 12 bytes, peripheral_usb.o(.text.USB_IsEpStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_IsEpStall
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[4f]"></a>USB_NewTransfer</STRONG> (Thumb, 368 bytes, Stack size 12 bytes, peripheral_usb.o(.text.USB_NewTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_NewTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
</UL>

<P><STRONG><a name="[61]"></a>USB_PCStopPhyClcok</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_PCStopPhyClcok))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_PCStopPhyClcok &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[5f]"></a>USB_ReInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_ReInit &rArr; USB_ClrConfig &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetTransfert
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRXFifo
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[58]"></a>USB_RecvData</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, peripheral_usb.o(.text.USB_RecvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetEnableIRQ
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_read_info
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusOut
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ucm_rx_data_trigger
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_rx_data_trigger
</UL>

<P><STRONG><a name="[5e]"></a>USB_ResetAndConfig</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_ResetAndConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_ResetAndConfig &rArr; USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupDataFifo
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetTransfert
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRXFifo
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetThreshold
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInitialization
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InitConfig
</UL>

<P><STRONG><a name="[48]"></a>USB_ResetTransfert</STRONG> (Thumb, 178 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_ResetTransfert))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_ResetTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Close
</UL>

<P><STRONG><a name="[55]"></a>USB_SendData</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, peripheral_usb.o(.text.USB_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetEnableIRQ
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_read_info
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_tx_data_trigger
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_keyboard_basic_report_start
</UL>

<P><STRONG><a name="[5c]"></a>USB_SetEp0Stall</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_SetEp0Stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_SetEp0Stall &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
</UL>

<P><STRONG><a name="[49]"></a>USB_SetStallEp</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_SetStallEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[67]"></a>USB_SetupDataFifo</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_SetupDataFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_SetupDataFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[66]"></a>USB_StartTransfer</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, peripheral_usb.o(.text.USB_StartTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_NewTransfer
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>

<P><STRONG><a name="[6c]"></a>adv_finded</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, profile.o(.text.adv_finded))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adv_finded &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[6f]"></a>apUART_BaudRateSet</STRONG> (Thumb, 132 bytes, Stack size 28 bytes, peripheral_uart.o(.text.apUART_BaudRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>

<P><STRONG><a name="[87]"></a>apUART_Check_TXFIFO_FULL</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Check_TXFIFO_FULL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Check_TXFIFO_FULL
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[6e]"></a>apUART_Initialize</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, peripheral_uart.o(.text.apUART_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>

<P><STRONG><a name="[3]"></a>app_main</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(.text.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_main &rArr; SYSCTRL_Init &rArr; flash_get_factory_calib_data &rArr; flash_prepare_factory_data &rArr; copy_security_data &rArr; read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_rtt_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_evt_callback_table
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_config
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>ble_state_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, profile.o(.text.ble_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler_TIMER2_INT
</UL>

<P><STRONG><a name="[76]"></a>bsp_usb_disable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bsp_usb_disable &rArr; SYSCTRL_SetClkGateMulti &rArr; SYSCTRL_SetClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_USBPhyConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetClkGateMulti
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Close
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[75]"></a>bsp_usb_hid_keyboard_basic_report_start</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_hid_keyboard_basic_report_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bsp_usb_hid_keyboard_basic_report_start &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_output_notification_handler
</UL>

<P><STRONG><a name="[7f]"></a>bsp_usb_hid_report_send</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_hid_report_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bsp_usb_hid_report_send &rArr; bsp_usp_hid_ctl_tx_data_trigger &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_tx_data_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extend_output_notification_handler
</UL>

<P><STRONG><a name="[81]"></a>bsp_usb_init</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_USBPhyConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetPLLClk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InitConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[e]"></a>btstack_callback</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, profile.o(.text.btstack_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = btstack_callback &rArr; gatt_event_query_complete_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_query_complete_parse
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.user_msg_handler)
</UL>
<P><STRONG><a name="[10]"></a>cb_putc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text.cb_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cb_putc &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[16]"></a>cb_trace_rtt</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, trace.o(.text.cb_trace_rtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = cb_trace_rtt &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_GetAvailWriteSpace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_get_gen_os_driver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[8e]"></a>config_uart</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, main.o(.text.config_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[96]"></a>erase_flash_sector</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, eflash.o(.text.erase_flash_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = erase_flash_sector &rArr; program_flash
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[9b]"></a>flash_enable_write_protection</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, eflash.o(.text.flash_enable_write_protection))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_enable_write_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[41]"></a>flash_get_factory_calib_data</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, eflash.o(.text.flash_get_factory_calib_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = flash_get_factory_calib_data &rArr; flash_prepare_factory_data &rArr; copy_security_data &rArr; read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_Init
</UL>

<P><STRONG><a name="[98]"></a>flash_prepare_factory_data</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, eflash.o(.text.flash_prepare_factory_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = flash_prepare_factory_data &rArr; copy_security_data &rArr; read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_enable_write_protection
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_sector
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ft_sum
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_data_ready
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_protection_status
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_security_data
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_factory_calib_data
</UL>

<P><STRONG><a name="[9d]"></a>gatt_client_util_discover_all</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, gatt_client_util.o(.text.gatt_client_util_discover_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gatt_client_util_discover_all &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_raise_assertion
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_primary_services
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[d]"></a>gatt_client_util_dump_profile</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gatt_client_util.o(.text.gatt_client_util_dump_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_client_util_dump_profile &rArr; gatt_client_util_print_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_uuid
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_print_properties
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.sm_packet_handler)
</UL>
<P><STRONG><a name="[a1]"></a>gatt_client_util_print_properties</STRONG> (Thumb, 124 bytes, Stack size 4 bytes, gatt_client_util.o(.text.gatt_client_util_print_properties))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_client_util_print_properties
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_dump_profile
</UL>

<P><STRONG><a name="[a0]"></a>gatt_client_util_print_uuid</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gatt_client_util.o(.text.gatt_client_util_print_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_client_util_print_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_has_bluetooth_prefix
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_dump_profile
</UL>

<P><STRONG><a name="[14]"></a>on_lle_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(.text.on_lle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = on_lle_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[97]"></a>program_flash</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, eflash.o(.text.program_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = program_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_sector
</UL>

<P><STRONG><a name="[90]"></a>read_flash_security</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, eflash.o(.text.read_flash_security))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ICacheControl
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security0
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_security_data
</UL>

<P><STRONG><a name="[f]"></a>service_discovery_callback</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, profile.o(.text.service_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = service_discovery_callback &rArr; gatt_event_service_query_result_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_request_pairing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_listen_for_characteristic_value_updates
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notify_char_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_service_query_result_parse
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_query_complete_parse
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.user_packet_handler)
</UL>
<P><STRONG><a name="[71]"></a>setup_peripherals</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, main.o(.text.setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = setup_peripherals &rArr; bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_disable
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetReload
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetOpMode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_WriteValue
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_SetDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[11]"></a>setup_profile</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, profile.o(.text.setup_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setup_profile
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_set_authentication_requirements
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_add_event_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_add_event_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_register_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_server_register_packet_handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[72]"></a>trace_rtt_init</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, trace.o(.text.trace_rtt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = trace_rtt_init &rArr; SEGGER_RTT_Init &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[91]"></a>write_flash</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, eflash.o(.text.write_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = write_flash &rArr; write_flash0
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash0
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ft_sum
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_security_data
</UL>

<P><STRONG><a name="[c7]"></a>write_flash0</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, eflash.o(.text.write_flash0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = write_flash0
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[d6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8b]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b]"></a>IRQHandler_TIMER2_INT</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, main.o(.text.IRQHandler_TIMER2_INT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = IRQHandler_TIMER2_INT &rArr; GIO_WriteValue
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_state_get
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetReload
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntClr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_WriteValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.setup_peripherals)
</UL>
<P><STRONG><a name="[13]"></a>cb_assertion</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(.text.cb_assertion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_assertion
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[12]"></a>cb_hard_fault</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, main.o(.text.cb_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cb_hard_fault
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[15]"></a>cb_heap_out_of_mem</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(.text.cb_heap_out_of_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_heap_out_of_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata.evt_cb_table)
</UL>
<P><STRONG><a name="[9]"></a>basic_output_notification_handler</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, profile.o(.text.basic_output_notification_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = basic_output_notification_handler &rArr; bsp_usb_hid_keyboard_basic_report_start &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_keyboard_basic_report_start
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_notification_parse
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.service_discovery_callback)
</UL>
<P><STRONG><a name="[bc]"></a>btstack_event_state_get_state</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.btstack_event_state_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = btstack_event_state_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[a]"></a>extend_output_notification_handler</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, profile.o(.text.extend_output_notification_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = extend_output_notification_handler &rArr; bsp_usb_hid_report_send &rArr; bsp_usp_hid_ctl_tx_data_trigger &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_report_send
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_notification_parse
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.service_discovery_callback)
</UL>
<P><STRONG><a name="[74]"></a>gatt_event_notification_parse</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, profile.o(.text.gatt_event_notification_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gatt_event_notification_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extend_output_notification_handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;basic_output_notification_handler
</UL>

<P><STRONG><a name="[84]"></a>gatt_event_query_complete_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.gatt_event_query_complete_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_query_complete_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_callback
</UL>

<P><STRONG><a name="[a6]"></a>gatt_event_service_query_result_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.gatt_event_service_query_result_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_service_query_result_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[c0]"></a>hci_event_le_meta_get_subevent_code</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_le_meta_get_subevent_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_le_meta_get_subevent_code
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[b5]"></a>hci_event_packet_get_type</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_packet_get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_packet_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[c6]"></a>hci_event_packet_get_user_msg</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_packet_get_user_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_packet_get_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[a7]"></a>output_notify_char_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, profile.o(.text.output_notify_char_init))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[b6]"></a>sm_event_just_works_request_get_handle</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.sm_event_just_works_request_get_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sm_event_just_works_request_get_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[b8]"></a>sm_event_passkey_display_number_get_passkey</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, profile.o(.text.sm_event_passkey_display_number_get_passkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sm_event_passkey_display_number_get_passkey
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_packet_handler
</UL>

<P><STRONG><a name="[17]"></a>sm_packet_handler</STRONG> (Thumb, 394 bytes, Stack size 56 bytes, profile.o(.text.sm_packet_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sm_packet_handler &rArr; gatt_client_util_discover_all &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_just_works_confirm
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_util_discover_all
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_event_passkey_display_number_get_passkey
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_event_just_works_request_get_handle
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_packet_get_type
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.data.sm_event_callback_registration)
</UL>
<P><STRONG><a name="[ba]"></a>user_msg_handler</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, profile.o(.text.user_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = user_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_characteristic_descriptor_using_descriptor_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[c]"></a>user_packet_handler</STRONG> (Thumb, 582 bytes, Stack size 120 bytes, profile.o(.text.user_packet_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = user_packet_handler &rArr; user_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_bd_addr
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_primary_services_by_uuid16
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_random_device_address
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_scan_para
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_scan_enable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_read_remote_used_features
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ext_create_connection
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_finded
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_packet_get_user_msg
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_packet_get_type
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_le_meta_get_subevent_code
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_event_state_get_state
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetReload
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.setup_profile)
</UL>
<P><STRONG><a name="[86]"></a>calc_checksum_32</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, eflash.o(.text.calc_checksum_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = calc_checksum_32
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_ft_sum
</UL>

<P><STRONG><a name="[85]"></a>calc_ft_sum</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, eflash.o(.text.calc_ft_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = calc_ft_sum &rArr; calc_checksum_32
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_checksum_32
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ft_sum
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_data_ready
</UL>

<P><STRONG><a name="[8f]"></a>copy_security_data</STRONG> (Thumb, 124 bytes, Stack size 96 bytes, eflash.o(.text.copy_security_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = copy_security_data &rArr; read_flash_security &rArr; SYSCTRL_ICacheControl &rArr; SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[9a]"></a>flash_read_protection_status</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, eflash.o(.text.flash_read_protection_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_read_protection_status
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[a3]"></a>get_ft_sum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, eflash.o(.text.get_ft_sum))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_data_ready
</UL>

<P><STRONG><a name="[99]"></a>is_data_ready</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, eflash.o(.text.is_data_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = is_data_ready &rArr; calc_ft_sum &rArr; calc_checksum_32
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ft_sum
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_ft_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[a4]"></a>read_flash_security0</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, eflash.o(.text.read_flash_security0))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = read_flash_security0
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;security_page_read
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security
</UL>

<P><STRONG><a name="[a5]"></a>security_page_read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, eflash.o(.text.security_page_read))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_security0
</UL>

<P><STRONG><a name="[9c]"></a>write_ft_sum</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, eflash.o(.text.write_ft_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = write_ft_sum &rArr; write_flash &rArr; write_flash0
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_ft_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_prepare_factory_data
</UL>

<P><STRONG><a name="[22]"></a>GIO_MaskedWrite</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, peripheral_gpio.o(.text.GIO_MaskedWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GIO_MaskedWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_SetDirection
</UL>

<P><STRONG><a name="[2d]"></a>set_reg_bits</STRONG> (Thumb, 76 bytes, Stack size 28 bytes, peripheral_pinctrl.o(.text.set_reg_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>

<P><STRONG><a name="[2e]"></a>source_id_on_pin</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, peripheral_pinctrl.o(.text.source_id_on_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = source_id_on_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
</UL>

<P><STRONG><a name="[37]"></a>SYSCTRL_CacheControl0</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_CacheControl0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SYSCTRL_CacheControl0 &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ICacheControl
</UL>

<P><STRONG><a name="[3b]"></a>SYSCTRL_ClkGateCtrl</STRONG> (Thumb, 906 bytes, Stack size 32 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClkGateCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetClkGate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGate
</UL>

<P><STRONG><a name="[38]"></a>set_reg_bit</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, peripheral_sysctrl.o(.text.set_reg_bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClkGateCtrl
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_CacheControl0
</UL>

<P><STRONG><a name="[39]"></a>set_reg_bits</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.set_reg_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SetLDOOutput
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_CacheControl0
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_Init
</UL>

<P><STRONG><a name="[64]"></a>__NVIC_GetEnableIRQ</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, peripheral_usb.o(.text.__NVIC_GetEnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_GetEnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>

<P><STRONG><a name="[51]"></a>nop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, peripheral_usb.o(.text.nop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nop
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_PCStopPhyClcok
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>

<P><STRONG><a name="[32]"></a>_DoInit</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, trace.o(.text._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
</UL>

<P><STRONG><a name="[30]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, trace.o(.text._GetAvailWriteSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_GetAvailWriteSpace
</UL>

<P><STRONG><a name="[36]"></a>_WriteBlocking</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, trace.o(.text._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[35]"></a>_WriteNoCheck</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, trace.o(.text._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[6]"></a>characteristic_discovery_callback</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, gatt_client_util.o(.text.characteristic_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = characteristic_discovery_callback &rArr; discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_query_complete_parse
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_characteristic_query_result_parse
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gatt_client_util.o(.text.service_discovery_callback)
<LI> gatt_client_util.o(.text.discover_char_of_service)
</UL>
<P><STRONG><a name="[7]"></a>descriptor_discovery_callback</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, gatt_client_util.o(.text.descriptor_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = descriptor_discovery_callback &rArr; discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_query_complete_parse
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_all_characteristic_descriptors_query_result_parse
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(.text.discover_desc_of_char)
</UL>
<P><STRONG><a name="[93]"></a>discover_char_of_service</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gatt_client_util.o(.text.discover_char_of_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristics_for_service
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_desc_of_char
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
</UL>

<P><STRONG><a name="[8d]"></a>discover_desc_of_char</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gatt_client_util.o(.text.discover_desc_of_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = discover_desc_of_char &rArr; discover_char_of_service
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discover_char_of_service
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristic_descriptors
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[92]"></a>gatt_event_all_characteristic_descriptors_query_result_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gatt_client_util.o(.text.gatt_event_all_characteristic_descriptors_query_result_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_all_characteristic_descriptors_query_result_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
</UL>

<P><STRONG><a name="[8a]"></a>gatt_event_characteristic_query_result_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gatt_client_util.o(.text.gatt_event_characteristic_query_result_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_characteristic_query_result_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[8c]"></a>gatt_event_query_complete_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gatt_client_util.o(.text.gatt_event_query_complete_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_query_complete_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptor_discovery_callback
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristic_discovery_callback
</UL>

<P><STRONG><a name="[ab]"></a>gatt_event_service_query_result_parse</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gatt_client_util.o(.text.gatt_event_service_query_result_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatt_event_service_query_result_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[ac]"></a>get_last_service</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gatt_client_util.o(.text.get_last_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_last_service
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_discovery_callback
</UL>

<P><STRONG><a name="[8]"></a>service_discovery_callback</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, gatt_client_util.o(.text.service_discovery_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = service_discovery_callback &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_service
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_service_query_result_parse
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_query_complete_parse
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_characteristics_for_service
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_client_util.o(.text.gatt_client_util_discover_all)
</UL>
<P><STRONG><a name="[5]"></a>bsp_usb_event_handler</STRONG> (Thumb, 2536 bytes, Stack size 224 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = bsp_usb_event_handler &rArr; bsp_usp_hid_ucm_rx_data_trigger &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IsEpStall
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEp0SetupData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigureEp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ucm_rx_data_trigger
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usp_hid_ctl_rx_data_trigger
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_ucm_push_rx_data_to_user
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_iap_push_rx_data_to_user
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hexdump
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_usb_hid_iap.o(.text.bsp_usb_init)
</UL>
<P><STRONG><a name="[7a]"></a>bsp_usb_hid_iap_push_rx_data_to_user</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_hid_iap_push_rx_data_to_user))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_usb_hid_iap_push_rx_data_to_user
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[7d]"></a>bsp_usb_hid_ucm_push_rx_data_to_user</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_usb_hid_iap.o(.text.bsp_usb_hid_ucm_push_rx_data_to_user))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_usb_hid_ucm_push_rx_data_to_user
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[7c]"></a>bsp_usp_hid_ctl_rx_data_trigger</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_usb_hid_iap.o(.text.bsp_usp_hid_ctl_rx_data_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bsp_usp_hid_ctl_rx_data_trigger &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[80]"></a>bsp_usp_hid_ctl_tx_data_trigger</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, bsp_usb_hid_iap.o(.text.bsp_usp_hid_ctl_tx_data_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = bsp_usp_hid_ctl_tx_data_trigger &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_hid_report_send
</UL>

<P><STRONG><a name="[7e]"></a>bsp_usp_hid_ucm_rx_data_trigger</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_usb_hid_iap.o(.text.bsp_usp_hid_ucm_rx_data_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bsp_usp_hid_ucm_rx_data_trigger &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
